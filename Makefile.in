##
##  Makefile -- Build procedure for ngx_mruby for nginx module
##	  MATSUMOTO, Ryosuke
##

MAKE="make"

NGX_MRUBY_ROOT=$(shell pwd)
NGX_SRC_ROOT=@NGX_SRC_ROOT@
NGX_CONFIG_OPT=@NGX_CONFIG_OPT@
MRUBY_ROOT=@MRUBY_ROOT@
ENABLE_GEMS=@ENABLE_GEMS@

#   suport mrbgems
ifeq ($(ENABLE_GEMS),false)
  GEM_ARCHIVE_FILES =
else
  MAKEFILE_GEM_LIST := $(MRUBY_ROOT)/mrbgems/g/MakefileGemList
  ifeq ($(wildcard $(MAKEFILE_GEM_LIST)),)
	GEM_ARCHIVE_FILES =
  else
	include $(MAKEFILE_GEM_LIST)
	NGX_MRUBY_CFLAGS = $(GEM_CFLAGS_LIST) $(MRUBY_ROOT)/include
	TARGET += generate_gems_config
  endif
endif

#   the default target
all: $(TARGET) ngx_mruby

#   install
install:
	cd $(NGX_SRC_ROOT) && $(MAKE) install

#   cleanup
clean:
	-rm -rf mrbgems_config

#   clobber
clobber: clean
	-rm -rf tmp autom4te.cache config.status config.log

#   nginx 1.2.2
ngx_mruby:
	cd $(NGX_SRC_ROOT) && ./configure --add-module=$(NGX_MRUBY_ROOT) $(NGX_CONFIG_OPT) && $(MAKE)

#   create mrbgems config
generate_gems_config:
	@echo CORE_LIBS=\"\$$CORE_LIBS $(GEM_LDFLAGS_LIST) $(GEM_ARCHIVE_FILES) $(GEM_LIBS_LIST)\" > ./mrbgems_config
	@echo CORE_INCS=\"\$$CORE_INCS $(NGX_MRUBY_CFLAGS)\" >> ./mrbgems_config

#   create sample mruby build with mrbgems
mruby_build:
	sh mymruby_with_mrbgems.sh


